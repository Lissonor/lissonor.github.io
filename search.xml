<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Oracle修改字符集]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[打开CMD窗口，以管理员登陆 sqlplus / as sysdba 查看服务器端字符集 SQL &gt; select * from V$NLS_PARAMETERS 若此时数据库服务器已启动，则先执行 SHUTDOWN IMMEDIATE 命令关闭数据库服务器，然后执行以下命令: SQL&gt;shutdown immediate SQL&gt;STARTUP MOUNT SQL&gt;ALTER SYSTEM ENABLE RESTRICTED SESSION; SQL&gt;ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0; SQL&gt;ALTER SYSTEM SET AQ_TM_PROCESSES=0; SQL&gt;ALTER DATABASE OPEN; SQL&gt;ALTER DATABASE CHARACTER SET ZHS16GBK; ERROR at line 1:ORA-12721: operation cannot execute when other sessions are active 若出现上面的错误，使用下面的办法进行修改，使用INTERNAL_USE可以跳过超集的检查： SQL&gt;ALTER DATABASE CHARACTER SET INTERNAL_USE ZHS16GBK; SQL&gt;SHUTDOWN IMMEDIATE SQL&gt;STARTUP 至此，字符集修改完毕。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>字符集修改</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL8.x在windows下安装]]></title>
    <url>%2F2019%2F03%2F04%2FMySQL8-x%E5%9C%A8windows%E4%B8%8B%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[MySQL 8.x 安装步骤 在mysql-8.0.11-winx64根路径下新建 my.ini配置文件及data文件夹： my.ini （配置文件） data文件夹（用于存放数据库文件） my.ini 内容如下 [mysqld] # 设置3306端口 port=3306 # 设置mysql的安装目录 basedir=E:\\mysql-5.7.22-winx64 # 设置mysql数据库的数据的存放目录 datadir=E:\\mysql-5.7.22-winx64\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8 [client] # 设置mysql客户端连接服务端时默认使用的端口 port=3306 default-character-set=utf8 在Windows的Path中添加 mysql环境变量：E:\mysql-8.0.11-winx64\bin 以管理员的身份打开cmd窗口跳转路径到E:\mysql-8.0.11-winx64\bin 初始化命令 mysqld --initialize --user=mysql --console (记住一定要进行初始化，很多人不进行初始化，就出现了1067错误，怎么弄都搞不定) 初始化完成之后，会生成一个临时密码（请记住，用于登陆root用户登陆） 接着就是输入 mysqld -install 添加MySQL服务 启动mysql服务： net start mysql 以root用户及临时密码登陆MySQL mysql -uroot -p 修改用户密码： ALTER USER root@localhost IDENTIFIED BY ‘mysql’; 注： 处理Navicat连接mysql报错：2059 的处理方法：是因为新版mysql的加密策略（caching_sha2_password）不兼容Navicat的加密策略造成的使用老版的mysql加密策略重新修改密码即可。命令： ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;mysql&apos;; 至此，已完美安装MySQL数据库。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle删除用户及其数据]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%8F%8A%E5%85%B6%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[在Oracle数据库中，有时候会用删除用户及数据操作。而Oracle中数据是依赖于用户的，因此要删除用户及该用户下的所有数据，需要执行以下命令级联删除： sqlplus / as sysdba drop user user_name cascade; 加了cascade就可以把用户连带的数据全部删掉。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle数据备份及导入]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E5%AF%BC%E5%85%A5%2F</url>
    <content type="text"><![CDATA[本文就Oracle数据库的备份及导入，基于 impdp/expdp命令进行导入/导出操作。 注：impdp/expdp命令只适用于数据库所在服务器的主机上操作（即本地操作） CMD命令窗口以管理员身份登录Oracle数据库 sqlplus / as sysdba 创建表空间（建议存放数据、索引、二进制文件的表空间分开管理） CREATE SMALLFILE TABLESPACE 表空间名_data DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_data.dbf’ SIZE 2048M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; CREATE SMALLFILE TABLESPACE 表空间名_index DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_index.dbf’ SIZE 1024M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; CREATE SMALLFILE TABLESPACE 表空间名_blob DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_blob.dbf’ SIZE 1024M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; 创建用户并授权 create user test identified by test default tablespace 表空间名_data temporary tablespace temp; grant connect,resource,dba to test; 创建本地存放导出数据文件（.dmp）文件夹，并将读写权限授予 test用户 create or replace directory db_dir as ‘D:\db_dir’； grant read,write on directory db_dir to test;（新建用户，执行数据导入操作用） grant read,write on directory db_dir to scott;（已有用户，执行数据导出操作用） 执行数据库导出操作 expdp scott/scott@orcl directory=db_dir dumpfile=xxx.dmp logfile=xxx.log 执行数据库导入操作 impdp test/test@orcl directory=db_dir dumpfile=xxx.dmp logfile=xxx.log remap_schema=scott:test transform=oid:n 注：1、REMAP_SCHEMA 的语法： remap_schema=scott:test ————（scott表示被导出数据时的用户名，test表示导入时的用户名） 2、RANSFORM的语法是 transform=segment_attributes|storage|oid|pctspace：Y/N:object_type transform取值oid:n的含义就是对oid信息不进行加载,重新进行生成。 【本文为原创】]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[版本控制系统TOP10]]></title>
    <url>%2F2019%2F02%2F28%2F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9FTOP10%2F</url>
    <content type="text"><![CDATA[选择合适的版本控制系统对于一个软件开发项目，尤其是Web开发项目的重要意义不言而喻，一个大型软件开发项目需要不同团队成员的协作并需要频繁更改，这时候就需要版本控制系统来确保代码的一致性。 什么是版本控制系统？ 版本控制系统允许用户跟踪软件开发项目中的变化，并在这些项目上进行协作。通过版本控制系统开发人员可以一起处理代码并通过分支（Branch）来分解任务。 根据协作者的数量，版本控制系统中可以有多个分支。当代码更改保留在指定的分支中时，分支保持独立性。 开发人员可以在需要时合并代码更改。此外，他们可以查看更改历史记录，返回到先前版本，并以所需方式使用/管理代码。 使用版本控制系统的好处 使用版本控制系统的主要优点包括简化开发过程，管理多个项目的代码以及保留代码中所有更改的历史记录。 最佳版本控制系统TOP10 市场上有很多版本控制系统可供选择，我们整理了TOP10最佳版本控制软件的榜单，方便大家选型： GitHub GitHub帮助软件团队协作并维护代码更改的整个历史记录。您可以跟踪代码中的更改，回滚以撤消错误并与其他团队成员分享您的工作。 它是托管Git项目的存储库。Git是一个开源版本控制系统，具有本地分支，多个工作流程和方便的临时区域。Git版本控制易于学习，并提供更快的操作速度。 GitLab GitLab提供了许多方便的功能，如集成项目，项目网站等。使用GitLab的持续集成（CI）功能，您可以自动测试和交付代码。 您可以访问项目的所有信息，查看代码，提取请求以及组合冲突解决方案。 Beanstalk 对于远程团队来说，Beanstalk是一个理想的选择。该软件基于浏览器和云，允许用户使用浏览器进行编码，提交，审查和部署。 它可以与消息传递和电子邮件平台集成，以实现与代码和更新相关的高效协作。它支持Git和SVN，并具有内置的分析功能。 为了安全起见，它利用加密，双因素身份验证和密码保护功能。 PerForce Perforce通过其HelixCore提供版本控制功能。HelixCore提供单一平台，可实现无缝团队协作，并支持集中式和分布式开发工作流程。 PerForce的最大卖点是：它是一种保护最有价值资产的安全解决方案。HelixCore允许您准确跟踪代码更改并促进完整的Git生态系统。 Apache Subversion Apache Subversion是另一个开源版本控制系统，几十年前由CollabNet创建。开源领域和企业都认为它是高价值数据的可靠选择。 Subversion的主要功能包括库存管理，安全管理，历史跟踪，用户访问控制，廉价本地分支和工作流管理。 AWS CodeCommit AWS CodeCommit是一个托管版本控制系统，可托管安全且可扩展的私有Git存储库。它与Amazon Web Services（AWS）中的其他产品无缝连接，并在安全的AWS环境中托管代码。因此，它非常适合AWS的现有用户。 AWS集成还提供对AWS合作伙伴的几个有用插件的访问，这有助于软件开发。 Microsoft Team Foundation Server Team Foundation Server由Microsoft开发，是一种企业级工具，用于管理需要版本控制的源代码和其他服务。它可以跟踪工作项以查找项目中的缺陷，需求和方案。 它具有几个独特的功能，如团队构建，数据收集和报告，团队项目门户，团队基础共享服务等。 Mercurial Mercurial以其处理各种规模项目的效率而闻名。它是一种免费的分布式控制管理服务，提供简单直观的用户界面。 开发人员和企业喜欢Mercurial的备份系统，搜索功能，项目跟踪和管理，数据导入和导出以及数据迁移工具。它还具有工作流管理，历史记录跟踪，安全管理，访问控制等功能。 CVS版本控制（并发版本系统） CVS是最古老的版本控制系统之一，是商业和开源开发人员中众所周知的工具。它允许您检查您计划处理的代码，并签入更改。 它具有处理具有多个分支的项目的能力，以便团队可以合并其代码更改并为项目贡献独特的功能。 由于CVS已经存在很长时间了，它是最成熟的版本控制软件。 Bitbucket Bitbucket是Atlassian软件套件的一部分，因此它可以与其他Atlassian服务集成，包括HipChat，Jira和Bamboo。Bitbucket的主要功能是代码分支，内联评论和讨论以及拉取请求。 它可以部署在本地服务器，公司的数据中心以及云上。Bitbucket允许您免费与最多五个用户连接。这很好，因为您可以在决定购买前免费试用该平台。 【原文：https://www.ctocio.com/ccnews/28112.html】]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>版本控制</tag>
      </tags>
  </entry>
</search>
