<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git关联的的文件没有绿色、红色小图标]]></title>
    <url>%2F2019%2F09%2F04%2Fgit-native-status-error%2F</url>
    <content type="text"><![CDATA[git关联的的文件没有绿色、红色小图标按Win+R键打开运行对话框，输入 regedit.exe ，准备修改注册表；找到 HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Explorer；新建一个“字符串值”：键名称为 “Max Cached Icons” 数据设置为 “2000”；重启一下电脑，图标就可以显示了。]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[eclipse上使用git pull代码时报错]]></title>
    <url>%2F2019%2F09%2F04%2Feclipse-git-pull-error%2F</url>
    <content type="text"><![CDATA[eclipse上使用git pull代码时报错：cannot open git-upload-pack(git-receive-pack)ssl协议的版本不对如果eclipse的默认JDK是1.7的就简单 在eclipse-window-preferences-team-git-configuration中add entry，设置key为http.sslVerify，值为false，然后apply 一般到这里就可以了，如果还报错，执行第2步 打开eclipse安装目录下的eclipse.ini文件的末尾追加以下代码：-Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2 到此就可以了。]]></content>
      <categories>
        <category>git</category>
        <category>eclipse</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle使用IMP/EXP导库]]></title>
    <url>%2F2019%2F09%2F03%2Foracle-imp-exp%2F</url>
    <content type="text"><![CDATA[Oracle使用IMP/EXP导库1、创建用户及授权（以DBA身份登录） 语法： create user 用户名 identified by 密码 default tablespace 表空间名 temporary tablespace temp; grant connect,resource,dba to 用户名; /*授权用户*/ 2、imp/exp Oracle的导库支持远程导库到本地，非常方便（CMD窗口） 语法，导出使用 exp: exp 用户名/密码@数据库IP:端口/数据库名 file=路径\文件.dmp owner=用户名 eg: exp user1/user123@8.8.8.8:1521/orcl file=D:\data.dmp owner=user1 导入使用 imp： imp 用户名/密码@数据库IP:端口/数据库名 file=路径\文件.dmp full=y eg: imp user2/user2123@127.0.0.1:1521/orcl file=D:\data.dmp full=y]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>imp/exp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[求两个数之和]]></title>
    <url>%2F2019%2F08%2F25%2Ftwo-num-sum%2F</url>
    <content type="text"><![CDATA[问题：给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。 你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。 示例: 给定 nums = [2, 7, 11, 15], target = 9 因为 nums[0] + nums[1] = 2 + 7 = 9所以返回 [0, 1] 1234567891011121314151617/** * 求数组中两个数之和为目标值的下标数组 * @param nums * @param target * @return */public static int[] twoSum(int[] nums, int target) &#123; Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); for (int i = 0; i &lt; nums.length; i++) &#123; int ano = target - nums[i]; if (map.containsKey(ano)) &#123; return new int[] &#123; map.get(ano), i &#125;; &#125; map.put(nums[i], i); &#125; return null;&#125; 1234567891011121314151617181920/** * 借鉴 * 求数组中两个数之和为目标值的下标数组（最高效的算法） * @param nums * @param target * @return */public static int[] twoSum0(int[] nums, int target) &#123; int max = 2047; int[] temp = new int[max + 1]; int diffPos; for (int i = 0; i &lt; nums.length; i++) &#123; diffPos = (target - nums[i]) &amp; max; if (temp[diffPos] != 0) &#123; return new int[]&#123;temp[diffPos] - 1, i&#125;; &#125; temp[nums[i] &amp; max] = i + 1; &#125; return null;&#125;]]></content>
      <categories>
        <category>java面试</category>
      </categories>
      <tags>
        <tag>两数之和</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo执行部署项目到Git时报错10054的解决办法]]></title>
    <url>%2F2019%2F08%2F25%2Fhexo-deploy-errno10054%2F</url>
    <content type="text"><![CDATA[hexo执行部署项目到Git时报错10054的解决办法执行 hexo g &amp;&amp; hexo d 部署项目报错：error: RPC failed;curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054 fatal: the remote end hu 进入到当前项目的.deploy_git目录下，打开Git_bash 执行以下命令对config进行配置 git config http.sslVerify &quot;false&quot;]]></content>
      <categories>
        <category>hexo问题</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[求两个数组的中位数]]></title>
    <url>%2F2019%2F08%2F25%2Fdouble-arrays-middle-data%2F</url>
    <content type="text"><![CDATA[求两个数组的中位数12345678910111213141516171819/** * 给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。 * 请你找出这两个有序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。 * 来源：力扣（LeetCode） * 链接：https://leetcode-cn.com/problems/median-of-two-sorted-arrays * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。 * @param nums1 * @param nums2 * @return */public static double findMedianSortedArrays0(int[] nums1, int[] nums2) &#123; int[] arr = Arrays.copyOf(nums1,nums1.length +nums2.length); for (int i = nums1.length; i &lt; arr.length; i++) &#123; arr[i] = nums2[i-nums1.length]; &#125; Arrays.sort(arr); int len = arr.length; return arr.length%2==0?(arr[len/2-1]+arr[len/2])/2.0:arr[len/2]*1.0;&#125; 原创]]></content>
      <categories>
        <category>java面试</category>
      </categories>
      <tags>
        <tag>求两个数组的中位数</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PLSQL无法连接Oracle的系列问题解决方法]]></title>
    <url>%2F2019%2F03%2F20%2Fpplsql%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5Oracle%E7%9A%84%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[最近在安装Oracle后，使用plsql连接时遇到很多问题，特意整理出来，以示后续类似问题不用手忙脚乱！ 安装好Oracle和PLSQLDeveloper后，PLSQLDeveloper登录时没有可选数据库和连接的问题（Win10） 在选择未登录情况下进入plsql客户端，依次进入：首选项&gt;连接 发现 Oracle主目录以及oci库的值是空的。这是需要先安装Oracle client，由于plsql紧支持32位的，因此选择32位版本就OK，免安装版，下载地址：Oracle client 下载地址 第一步：下载完成后为 instantclient_11_2 文件夹，将其拷贝到Oracle的安装目录D:\app\Ian\product\11.2.0 下（这个目录依照你安装Oracle的路径安定） 随后在 instantclient_11_2 路径下新建文件夹： NETWORK\ADMIN，建好后是这样：D:\app\Ian\product\11.2.0\instantclient_11_2\NETWORK\ADMIN 接下来是将 D:\app\Ian\product\11.2.0\dbhome_1\NETWORK\ADMIN 下的两个文件（tnsnames.ora、sqlnet.ora）拷贝到建好的路径下 第二步：配置plsql，为登录情况下进入plsql，进入：首选项&gt;连接，进行配置 Oracle主目录的值： D:\app\Ian\product\11.2.0\instantclient_11_2 OCI库的值：D:\app\Ian\product\11.2.0\instantclient_11_2\oci.dll 重启plsql解决问题 解决plsql查询出的数据中文乱码问题 查看数据的编码（语句：select * from v$nls_parameters） 发现： NLS_LANGUAGE = AMERICAN NLS_CHARACTERSET = ZHS16GBK 不是想要的GBK模式 配置环境变量： LANG=zh_CN.GBK NLS_LANG=SIMPLIFIED CHINESE_CHINA.ZHS16GBK 重启plsql再次进行查询即可显示出中文 plsql连接不同环境的数据库配置 找到 Oracle 安装目录：D:\app\Ian\product\11.2.0\dbhome_1\NETWORK\ADMIN打开 tnsnames.ora 文件： 本地ORCL = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = orcl) ) ) 外网数据库配置（前提：对你所在的本机开放）ORCL_test = (DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = 1.1.1.666)(PORT = 1521)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = orcl) ) ) ORCL_test这个名字是由你自己取的,客户端是通过这个名字来获得服务器的登录信息的。 最后，将 tnsnames.ora 拷贝覆盖 D:\app\Ian\product\11.2.0\instantclient_11_2\NETWORK\ADMIN下的 tnsnames.ora 文件 重启plsql即可 PROTOCOL是指定的通信协议,oracle是通过TCP/IP通信的。所以这里写TCP就好。 HOST的话如果客户端和数据库在同一台电脑可以用localhost也可以用IP。如果不同电脑就必须用IP了,是oracle所在电脑的IP。 PORT一般都是1521。 SERVER是dedicated检测模式的监听。(不太清楚，不用管也正常)。 service_name是oracle的SID。 处理 ORA-12638：身份证明检索失败的解决方法（主要问题是连接非本机Oracle会出现此问题） D:\app\Ian\product\11.2.0\dbhome_1\NETWORK\ADMIN 下的文件： sqlnet.ora，编辑它。 网上查找相关解答 都基本都是将里面的SQLNET.AUTHENTICATION_SERVICES= (NTS)改为：SQLNET.AUTHENTICATION_SERVICES= (NONE) 但发现并不生效，将其注释掉，即可解决问题： # SQLNET.AUTHENTICATION_SERVICES= (NTS) 修改完后将其拷贝一份覆盖 D:\app\Ian\product\11.2.0\instantclient_11_2\NETWORK\ADMIN 下的同名文件，重启plsql解决问题。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>plsql连接Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一些实用的工具书]]></title>
    <url>%2F2019%2F03%2F06%2F%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E4%B9%A6%2F</url>
    <content type="text"><![CDATA[一些实用的IT工具书籍推荐给大家，有兴趣可参阅！ 书籍链接（链接永久有效）： 链接：https://pan.baidu.com/s/1WZgbzoQNehwh5Ld1ODmglw提取码：6qqm]]></content>
      <categories>
        <category>书籍</category>
      </categories>
      <tags>
        <tag>书籍</tag>
        <tag>IT工具书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle修改字符集]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E4%BF%AE%E6%94%B9%E5%AD%97%E7%AC%A6%E9%9B%86%2F</url>
    <content type="text"><![CDATA[打开CMD窗口，以管理员登陆 sqlplus / as sysdba 查看服务器端字符集 SQL &gt; select * from V$NLS_PARAMETERS 若此时数据库服务器已启动，则先执行 SHUTDOWN IMMEDIATE 命令关闭数据库服务器，然后执行以下命令: SQL&gt;shutdown immediate SQL&gt;STARTUP MOUNT SQL&gt;ALTER SYSTEM ENABLE RESTRICTED SESSION; SQL&gt;ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0; SQL&gt;ALTER SYSTEM SET AQ_TM_PROCESSES=0; SQL&gt;ALTER DATABASE OPEN; SQL&gt;ALTER DATABASE CHARACTER SET ZHS16GBK; ERROR at line 1:ORA-12721: operation cannot execute when other sessions are active 若出现上面的错误，使用下面的办法进行修改，使用INTERNAL_USE可以跳过超集的检查： SQL&gt;ALTER DATABASE CHARACTER SET INTERNAL_USE ZHS16GBK; SQL&gt;SHUTDOWN IMMEDIATE SQL&gt;STARTUP 至此，字符集修改完毕。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>字符集修改</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL8.x在windows下安装]]></title>
    <url>%2F2019%2F03%2F04%2FMySQL8-x%E5%9C%A8windows%E4%B8%8B%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[MySQL 8.x 安装步骤 在mysql-8.0.11-winx64根路径下新建 my.ini配置文件及data文件夹： my.ini （配置文件） data文件夹（用于存放数据库文件） my.ini 内容如下 [mysqld] # 设置3306端口 port=3306 # 设置mysql的安装目录 basedir=E:\\mysql-5.7.22-winx64 # 设置mysql数据库的数据的存放目录 datadir=E:\\mysql-5.7.22-winx64\\data # 允许最大连接数 max_connections=200 # 允许连接失败的次数。这是为了防止有人从该主机试图攻击数据库系统 max_connect_errors=10 # 服务端使用的字符集默认为UTF8 character-set-server=utf8 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8 [client] # 设置mysql客户端连接服务端时默认使用的端口 port=3306 default-character-set=utf8 在Windows的Path中添加 mysql环境变量：E:\mysql-8.0.11-winx64\bin 以管理员的身份打开cmd窗口跳转路径到E:\mysql-8.0.11-winx64\bin 初始化命令 mysqld --initialize --user=mysql --console (记住一定要进行初始化，很多人不进行初始化，就出现了1067错误，怎么弄都搞不定) 初始化完成之后，会生成一个临时密码（请记住，用于登陆root用户登陆） 接着就是输入 mysqld -install 添加MySQL服务 启动mysql服务： net start mysql 以root用户及临时密码登陆MySQL mysql -uroot -p 修改用户密码： ALTER USER root@localhost IDENTIFIED BY ‘mysql’; 注： 处理Navicat连接mysql报错：2059 的处理方法：是因为新版mysql的加密策略（caching_sha2_password）不兼容Navicat的加密策略造成的使用老版的mysql加密策略重新修改密码即可。命令： ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;mysql&apos;; 至此，已完美安装MySQL数据库。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle删除用户及其数据]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%8F%8A%E5%85%B6%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[在Oracle数据库中，有时候会用删除用户及数据操作。而Oracle中数据是依赖于用户的，因此要删除用户及该用户下的所有数据，需要执行以下命令级联删除： sqlplus / as sysdba drop user user_name cascade; 加了cascade就可以把用户连带的数据全部删掉。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle数据备份及导入]]></title>
    <url>%2F2019%2F03%2F04%2FOracle%E6%95%B0%E6%8D%AE%E5%A4%87%E4%BB%BD%E5%8F%8A%E5%AF%BC%E5%85%A5%2F</url>
    <content type="text"><![CDATA[本文就Oracle数据库的备份及导入，基于 impdp/expdp命令进行导入/导出操作。 注：impdp/expdp命令只适用于数据库所在服务器的主机上操作（即本地操作） CMD命令窗口以管理员身份登录Oracle数据库 sqlplus / as sysdba 创建表空间（建议存放数据、索引、二进制文件的表空间分开管理） CREATE SMALLFILE TABLESPACE 表空间名_data DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_data.dbf’ SIZE 2048M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; CREATE SMALLFILE TABLESPACE 表空间名_index DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_index.dbf’ SIZE 1024M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; CREATE SMALLFILE TABLESPACE 表空间名_blob DATAFILE ‘D:\app\gengzhy\oradata\orcl\表空间名_blob.dbf’ SIZE 1024M AUTOEXTEND ON NEXT 10000K MAXSIZE UNLIMITED LOGGING EXTENT MANAGEMENT LOCAL SEGMENT SPACE MANAGEMENT AUTO ; 创建用户并授权 create user test identified by test default tablespace 表空间名_data temporary tablespace temp; grant connect,resource,dba to test; 创建本地存放导出数据文件（.dmp）文件夹，并将读写权限授予 test用户 create or replace directory db_dir as ‘D:\db_dir’； grant read,write on directory db_dir to test;（新建用户，执行数据导入操作用） grant read,write on directory db_dir to scott;（已有用户，执行数据导出操作用） 执行数据库导出操作 expdp scott/scott@orcl directory=db_dir dumpfile=xxx.dmp logfile=xxx.log 执行数据库导入操作 impdp test/test@orcl directory=db_dir dumpfile=xxx.dmp logfile=xxx.log remap_schema=scott:test transform=oid:n 注：1、REMAP_SCHEMA 的语法： remap_schema=scott:test ————（scott表示被导出数据时的用户名，test表示导入时的用户名） 2、RANSFORM的语法是 transform=segment_attributes|storage|oid|pctspace：Y/N:object_type transform取值oid:n的含义就是对oid信息不进行加载,重新进行生成。 【本文为原创】]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[版本控制系统TOP10]]></title>
    <url>%2F2019%2F02%2F28%2F%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9FTOP10%2F</url>
    <content type="text"><![CDATA[选择合适的版本控制系统对于一个软件开发项目，尤其是Web开发项目的重要意义不言而喻，一个大型软件开发项目需要不同团队成员的协作并需要频繁更改，这时候就需要版本控制系统来确保代码的一致性。 什么是版本控制系统？ 版本控制系统允许用户跟踪软件开发项目中的变化，并在这些项目上进行协作。通过版本控制系统开发人员可以一起处理代码并通过分支（Branch）来分解任务。 根据协作者的数量，版本控制系统中可以有多个分支。当代码更改保留在指定的分支中时，分支保持独立性。 开发人员可以在需要时合并代码更改。此外，他们可以查看更改历史记录，返回到先前版本，并以所需方式使用/管理代码。 使用版本控制系统的好处 使用版本控制系统的主要优点包括简化开发过程，管理多个项目的代码以及保留代码中所有更改的历史记录。 最佳版本控制系统TOP10 市场上有很多版本控制系统可供选择，我们整理了TOP10最佳版本控制软件的榜单，方便大家选型： GitHub GitHub帮助软件团队协作并维护代码更改的整个历史记录。您可以跟踪代码中的更改，回滚以撤消错误并与其他团队成员分享您的工作。 它是托管Git项目的存储库。Git是一个开源版本控制系统，具有本地分支，多个工作流程和方便的临时区域。Git版本控制易于学习，并提供更快的操作速度。 GitLab GitLab提供了许多方便的功能，如集成项目，项目网站等。使用GitLab的持续集成（CI）功能，您可以自动测试和交付代码。 您可以访问项目的所有信息，查看代码，提取请求以及组合冲突解决方案。 Beanstalk 对于远程团队来说，Beanstalk是一个理想的选择。该软件基于浏览器和云，允许用户使用浏览器进行编码，提交，审查和部署。 它可以与消息传递和电子邮件平台集成，以实现与代码和更新相关的高效协作。它支持Git和SVN，并具有内置的分析功能。 为了安全起见，它利用加密，双因素身份验证和密码保护功能。 PerForce Perforce通过其HelixCore提供版本控制功能。HelixCore提供单一平台，可实现无缝团队协作，并支持集中式和分布式开发工作流程。 PerForce的最大卖点是：它是一种保护最有价值资产的安全解决方案。HelixCore允许您准确跟踪代码更改并促进完整的Git生态系统。 Apache Subversion Apache Subversion是另一个开源版本控制系统，几十年前由CollabNet创建。开源领域和企业都认为它是高价值数据的可靠选择。 Subversion的主要功能包括库存管理，安全管理，历史跟踪，用户访问控制，廉价本地分支和工作流管理。 AWS CodeCommit AWS CodeCommit是一个托管版本控制系统，可托管安全且可扩展的私有Git存储库。它与Amazon Web Services（AWS）中的其他产品无缝连接，并在安全的AWS环境中托管代码。因此，它非常适合AWS的现有用户。 AWS集成还提供对AWS合作伙伴的几个有用插件的访问，这有助于软件开发。 Microsoft Team Foundation Server Team Foundation Server由Microsoft开发，是一种企业级工具，用于管理需要版本控制的源代码和其他服务。它可以跟踪工作项以查找项目中的缺陷，需求和方案。 它具有几个独特的功能，如团队构建，数据收集和报告，团队项目门户，团队基础共享服务等。 Mercurial Mercurial以其处理各种规模项目的效率而闻名。它是一种免费的分布式控制管理服务，提供简单直观的用户界面。 开发人员和企业喜欢Mercurial的备份系统，搜索功能，项目跟踪和管理，数据导入和导出以及数据迁移工具。它还具有工作流管理，历史记录跟踪，安全管理，访问控制等功能。 CVS版本控制（并发版本系统） CVS是最古老的版本控制系统之一，是商业和开源开发人员中众所周知的工具。它允许您检查您计划处理的代码，并签入更改。 它具有处理具有多个分支的项目的能力，以便团队可以合并其代码更改并为项目贡献独特的功能。 由于CVS已经存在很长时间了，它是最成熟的版本控制软件。 Bitbucket Bitbucket是Atlassian软件套件的一部分，因此它可以与其他Atlassian服务集成，包括HipChat，Jira和Bamboo。Bitbucket的主要功能是代码分支，内联评论和讨论以及拉取请求。 它可以部署在本地服务器，公司的数据中心以及云上。Bitbucket允许您免费与最多五个用户连接。这很好，因为您可以在决定购买前免费试用该平台。 【原文：https://www.ctocio.com/ccnews/28112.html】]]></content>
      <categories>
        <category>版本控制</category>
      </categories>
      <tags>
        <tag>版本控制</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下部署Javaweb运行环境]]></title>
    <url>%2F2018%2F04%2F30%2FLinux%E4%B8%8B%E9%83%A8%E7%BD%B2Javaweb%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[第一部分 Linux 常用命令集 centos 开关机命令： 关机：shutdown -h now 立刻关机（管理员权限）：shutdown -r now 立刻重启：reboot 更新yum仓库： yum -y update 删除文件： rm -f 文件名 查看某个文件： rpm -qa | grep 文件名 打开一个文件： vi(m) 文件名 键入i进入编辑模式 按下Esc键，键入 :wq 执行保存退出（不保存退出则键入 :q!） 查看服务列表：chkconfig –list 安装防火墙：iptables服务组件(centos 7以下)： 安装：yum install iptables-services 设置为可用：systemctl enable iptables 启动：systemctl start iptables 【[stop|restart]】 开放端口：iptables -A INPUT -p tcp –dport 端口号 -j ACCEPT 保存配置：service iptables save Linux解压zip、tar等包： zip: unzip xxx.zip tar: tar -xvf xxx.tar tar.gz: tar -zxvf xxx.tar.gz centOS（7及以上版本）下对防火墙的设置： 启动一个服务：systemctl start firewalld.service 关闭一个服务：systemctlstop firewalld.service 重启一个服务：systemctlrestart firewalld.service 显示一个服务的状态：systemctlstatus firewalld.service 在开机时启用一个服务：systemctlenable firewalld.service 在开机时禁用一个服务：systemctldisable firewalld.service 查看服务是否开机启动：systemctlis-enabled firewalld.service 查看已启动的服务列表：systemctllist-unit-files|grep enabled 查看启动失败的服务列表：systemctl–failed 配置firewalld-cmd： 查看版本： firewall-cmd –version 查看帮助： firewall-cmd –help 显示状态： firewall-cmd –state 查看所有打开的端口：firewall-cmd–zone=public –list-ports 更新防火墙规则： firewall-cmd –reload 查看区域信息:firewall-cmd–get-active-zones 查看指定接口所属区域： firewall-cmd–get-zone-of-interface=eth0 拒绝所有包：firewall-cmd –panic-on 取消拒绝状态： firewall-cmd –panic-off 查看是否拒绝： firewall-cmd –query-panic 开启一个端口： firewall-cmd –zone=public –add-port=80/tcp –permanent （–permanent永久生效，没有此参数重启后失效） 重新载入： firewall-cmd –reload 查看端口： firewall-cmd –zone=public –query-port=80/tcp 删端口除： firewall-cmd –zone=public –remove-port=80/tcp –permanent​ ​ 第二部分 Linux 常用Javaweb 环境工具安装 CentOS安装 jdk（免安装版）： 下载 jdk tar 包 将 jdk tar 包上传至 centOS 服务器 解压 jdk tar 包： tar -zxvf xxx.tar.gz 配置 jdk 环境变量： (进入etc目录：cd /etc，使用 vi 命令打开 profile 配置文件：vi profile，键入 i 进入编辑模式) 在配置文件行末添加如下配置： export JAVA_HOME=/opt/jdk1.8.0_162 export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar export PATH=$PATH:$JAVA_HOME/bin 使得 jdk 生效： source /etc/profile ​—​ centOS安装 tomcat（免安装版）： 下载 tomcat（免安装版） 将 tomcat tar 包上传至 centOS 服务器 解压 jdk tar 包： tar -zxvf xxx.tar.gz 在 profile 配置文件作如下配置： export TOMCAT_HOME=/opt/apache-tomcat-8.5.29 export PATH=$PATH:$TOMCAT_HOME/bin 使得 tomcat 生效： source /etc/profile 设置tomcat编码格式： vim /opt/apache-tomcat-8/bin/server.xml &lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; URIEncoding=&quot;utf-8&quot; /&gt; –***特别注意：配置环境变量时，等号两边不能留有空格（否则会报错） 开放8080端口： firewall-cmd --zone=public --add-port=80/tcp --permanent firewall-cmd --reload ​—​ centOS7下安装 mysql（rpm安装）查看Linux是否默认安装了mysql： rpm -qa | grep mariadb 卸载mysql(centos7默认自带)： rpm -e --nodeps mariadb-libs-5.5.56-2.el7.x86_64 开始安装mysql： (1)配置YUM源在MySQL官网中下载YUM源rpm安装包：http://dev.mysql.com/downloads/repo/yum/ 下载mysql源安装包: wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm 安装mysql源: yum localinstall mysql57-community-release-el7-8.noarch.rpm 检查mysql源是否安装成功: yum repolist enabled | grep &quot;mysql.*-community.*&quot; (2)改变默认安装的mysql版本: vi /etc/yum.repos.d/mysql-community.repo 如：要安装5.6版本，将5.7源的enabled=1改成enabled=0。然后再将5.6源的enabled=0改成enabled=1即可。 (3)安装MySQL: yum install mysql-community-server (4)启动MySQL服务: systemctl start mysqld [restart|stop] 查看MySQL的启动状态： systemctl status mysqld (5)开机启动 systemctl enable mysqld systemctl daemon-reload (6)修改root本地登录密码： -mysql -uroot -p ALTER USERroot@localhostIDENTIFIED BY &apos;mysql&apos;; 或 set password for &apos;root&apos;@&apos;localhost&apos;=password(&apos;password&apos;); (7)添加远程登录用户(需先登录mysql): GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;mysql&apos; WITH GRANT OPTION; flush privileges; (8)配置默认编码为utf8: cp -f /usr/share/mysql/my-default.cnf /etc/my.cnf vi /etc/my.cnf 在[mysqld]下添加： character_set_server=utf8 init_connect=&apos;SET NAMES utf8&apos; (9)重启mysql服务： systemctl restart mysqld (10)开放3306端口及22端口： firewall-cmd --zone=public --add-port=3306/tcp --permanent firewall-cmd --zone=public --add-port=22/tcp --permanent 重新载入 firewall-cmd --reload 注：查看mysql服务是否启动： ps -ef | grep mysql​ ​ CentOS下 SVN版本控制的安装（yum安装）检查是否安装了低版本的SVN： rpm -qa subversion 卸载旧版本SVN： yum remove subversion 1.在线安装SVN(subversion)： yum -y install subversion 查看SVN版本： svnserve --version 2.创建版本仓库： 创建文件夹： mkdir -p /opt/svn/project 创建版本仓库： svnadmin create /opt/svn/project/ (注：查看/opt/svn/project 文件夹发现包含了conf, db,format,hooks, locks, README.txt等文件，说明一个SVN库已经建立。) README.txt 版本库的说明文件 conf ：配置文件件夹（后续操作最多的文件夹） db ：SVN数据文件文件夹 format ：当前版本库的版本号 hooks ：SVN的钩子脚本文件夹 locks ：SVN的文件锁相关的文件夹 3.配置权限: (1)修改svnserve.conf： anon-access=none #去除文件前的注释，将read改为none,防止匿名访问 auth-access=write #去除文件前的注释 password-db=passwd #去除文件前的注释 authz-db=authz #去除文件前的注释,访问权限配置,非常重要,不打开,分组权限不生效 (2)修改passwd,添加访问TestCode用户: 以键值对的方式添加，等号两端不留空格： ian=root(注：ian为SVN用户名，root为密码) (3)修改authz,设置添加的用户权限 ###创建用户组，并添加用户 [groups] group_root=root,ian group_comm=test # [repository:/baz/fuz] # @harry_and_sally = rw # * = r ###用户组或用户授权 #版本库路径 SVNproject仓库 [project:/] #[&lt;版本库名&gt;:&lt;路径&gt;] #给root用户组授权可读写权限 @group_root=rw #&lt;用户组&gt; = &lt;权限&gt; ，第一种方式 #给test用户可读权限 test=r #&lt;用户名&gt; = &lt;权限&gt; ，第二种方式 #设置匿名用户无权限 = # = &lt;权限&gt;，第三种方式，*为任意用户，此为禁止匿名用户访问4.防火墙开放SVN端口通行 firewall-cmd --zone=public --add-port=3690/tcp --permanent firewall-cmd --reload 5.启动svn服务 svnserve -d -r /opt/svn (停止SVN服务：killall svnserve) 6.windows客户端访问SVN仓库： 下载TortoiseSVN(https://tortoisesvn.net/downloads.html) 安装完成输入SVN地址：svn://192.168.43.85/project (注：project 为svn仓库名) 7.同步(客户端到服务端)、更新(服务端都客户端) 资源 (1)在桌面右键，选择SVN checkout…，输入SVN地址：svn://192.168.43.85/project,SVN用户名及密码登录成功后 (2)在客户端(windows)创建一个空白文件夹用于存放项目 在TortoiseSVN中的 checkout directory里选择该空白文件 (3)配置完成后，打开该文件夹(或直接选中该文件夹)。右键，选择SVN update 进行服务断更新到客户端； 选择 SVN commit 进行客户到提交到服务端]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Java环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于springMVC的文件上传实现]]></title>
    <url>%2F2018%2F04%2F29%2F%E5%9F%BA%E4%BA%8EspringMVC%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[写在前面的话： ​在执行问价上传前的准备工作搭建SSM（Spring、SpringMVC、Mybatis）框架的web项目（这里不作阐述，后续会补上这部分的内容）​ 注：SpringMVC支持前端页面的form表单实现文件上传的前提： 需在springmvc的配置文件中配置文件上传解析器：CommonsMultipartResolver。form表单的提交类型必须是：enctype=&quot;multipart/form-data&quot; 执行文件上传所依赖的核心jar包： commons-fileupload-1.3.1.jar commons-io-2.2.jar spring-web-4.2.9.RELEASE.jar（springmvc自带） 单个文件上传【源码】 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950/**** SpringMVC可实现单文件上传的工具类 使用前提：需在springmvc的配置文件中配置* 文件上传解析器：CommonsMultipartResolver * 表单的提交类型必须是：enctype="multipart/form-data"* @param uploadFile 上传的文件* @param request HttpServletRequest* @param fileDir 上传文件存放的文件夹名称* @return 重命名后的文件名称*/public static String fileUpload(MultipartFile uploadFile, HttpServletRequest request, String fileDir) &#123; // 用于重名文文件 String tmpFileName = null; // 获取项目的的绝对路径 String rootPath = request.getServletContext().getRealPath(fileDir); System.out.println("文件上传的路径：[ "+rootPath+" ]"); // 把上传的文件写入指定的路径 if (uploadFile != null) &#123; // 获取上传文件的名称 String fileName = uploadFile.getOriginalFilename(); System.out.println("上传的原始文件名称：[ "+fileName+" ]"); // 获取上传文件的扩展名 String suffix = fileName.substring(fileName.lastIndexOf(".")); tmpFileName = UUID.randomUUID().toString().replace("-", "") + suffix; System.out.println("重命名后的新文件名称： [ "+tmpFileName+" ]"); // 创建文件流 File tmpFile = new File(rootPath); if (!tmpFile.exists()) &#123; tmpFile.mkdirs(); &#125; File file = new File(rootPath + "\\" + tmpFileName); System.out.println("文件上传后的全路径：[ "+file.getAbsolutePath()+" ]"); // 将文件写入到指定的路径 try &#123; uploadFile.transferTo(file); &#125; catch (IllegalStateException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; return tmpFileName;&#125; 多文件上传【源码】 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657/**** SpringMVC可实现多文件上传的工具类 使用前提：需在springmvc的配置文件中配置* 文件上传解析器：CommonsMultipartResolver* 表单的提交类型必须是：enctype="multipart/form-data"* @param fileBatch 上传文件的集合 * @param request HttpServletRequest* @param fileDir 上传文件存放的文件夹名称* @return 重命名后的文件名称集合* /public static Map&lt;String, Object&gt; fileUploadBatch(MultipartFile[] uploadFileBatch, HttpServletRequest request,String fileDir) &#123; // 获取项目的的绝对路径 String rootPath = request.getServletContext().getRealPath(fileDir); System.out.println("文件上传的路径：[ "+rootPath+" ]"); // 创建map集合存储文件 Map&lt;String, Object&gt; fileMap = new HashMap&lt;String, Object&gt;(); // 把上传的文件写入指定的路径 if (uploadFileBatch != null &amp;&amp; uploadFileBatch.length &gt; 0) &#123; for (MultipartFile multipartFile : uploadFileBatch) &#123; if (multipartFile != null) &#123; // 获取上传文件的名称 String fileName = multipartFile.getOriginalFilename(); System.out.println("上传的原始文件名称：[ "+fileName+" ]"); // 获取上传文件的扩展名 String suffix = fileName.substring(fileName.lastIndexOf(".")); // 重名文文件 String tmpFileName = UUID.randomUUID().toString().replace("-", "") + suffix; System.out.println("重命名后的新文件名称： [ "+tmpFileName+" ]"); // 创建文件流 File tmpFile = new File(rootPath); if (!tmpFile.exists()) &#123; tmpFile.mkdirs(); &#125; File file = new File(rootPath + "\\" + tmpFileName); System.out.println("文件上传后的全路径：[ "+file.getAbsolutePath()+" ]"); // 将文件写入到指定的路径 try &#123; multipartFile.transferTo(file); &#125; catch (IllegalStateException e) &#123; e.printStackTrace(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; // 将每个上传文件存入到map集合 fileMap.put(fileName, tmpFileName); &#125; &#125; &#125; return fileMap;&#125;]]></content>
      <categories>
        <category>SpringMVC</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
</search>
